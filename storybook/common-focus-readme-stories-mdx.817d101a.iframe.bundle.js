/*! For license information please see common-focus-readme-stories-mdx.817d101a.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunk_utrecht_storybook=self.webpackChunk_utrecht_storybook||[]).push([[4263],{"../../components/common/focus/readme.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{FocusBEMExample:()=>FocusBEMExample,FocusHTMLExample:()=>FocusHTMLExample,bem:()=>bem,default:()=>readme_stories,focusWithBem:()=>focusWithBem,focusWithBemAndBothFocusAndFocusVisible:()=>focusWithBemAndBothFocusAndFocusVisible,focusWithBemAndFocus:()=>focusWithBemAndFocus,focusWithBemAndFocusVisible:()=>focusWithBemAndFocusVisible,focusWithHtml:()=>focusWithHtml});__webpack_require__("../../node_modules/.pnpm/react@18.2.0/node_modules/react/index.js");var lib=__webpack_require__("../../node_modules/.pnpm/@mdx-js+react@2.3.0_react@18.2.0/node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("../../node_modules/.pnpm/@storybook+blocks@7.4.0_react-dom@18.2.0_react@18.2.0/node_modules/@storybook/blocks/dist/index.mjs"),clsx_m=__webpack_require__("../../node_modules/.pnpm/clsx@1.2.1/node_modules/clsx/dist/clsx.m.js");const README_namespaceObject="\x3c!-- @license CC0-1.0 --\x3e\n\n# Focus\n\nIn CSS there are two important pseudo-classes we use: `:focus` and `:focus-visible`.\n\nBrowser support for [`:focus-visible`](https://developer.mozilla.org/en-US/docs/Web/CSS/:focus-visible) unfortunately [does not include Safari 15](https://caniuse.com/css-focus-visible).\n\n## Comparison\n\n`:focus`:\n\n- Not visible on disabled interactive elements.\n- Only in this state for a very short time when a mouse click or touch interaction triggers activation, for components such as a button or link.\n- In this state for longer for elements that cannot be activated, such as a textbox.\n- Remains in this state after activation for some components, such as a checkbox.\n- Visual effect can vary per component:\n  - different background color\n  - different border width\n  - different border color\n  - different text underline style\n\n`:focus-visible`:\n\n- Visible even on disabled interactive elements.\n- Looks very similar across components, because user needs to keep track of focused element.\n- Should draw attention.\n\n## Design for `:focus`\n\n- The design for `:focus` should be distinguishable from the `:hover` design. When a user did not configure their system to always make focus visible using for example a focus ring, the user should be able to know which component will be activated when pressing the `Enter` key. When focus and hover state look similar, it might not possible to know which element would be activated.\n- When using color, use a consistent color to convey focus. Choose a color that can be combined with other states, such as combining the red color for invalid state with your color for focus state.\n- When changing the `font-weight` of a component as focus state, it might cause unintended layout shifts, so it might not be the ideal option.\n\n## Design for `:focus-visible`\n\n- A focus ring should not obscure the content inside the focused area.\n- A focus ring should not obscure surrounding content. This consideration can also affect the minimum space between focusable elements.\n- A focus ring should be visible with sufficient contrast on both dark and light backgrounds.\n- A focus ring should be visible on backgrounds with unknown and mixed colors, such as background images.\n- When using CSS with `overflow: hidden` in your component, the `outline` rendering can become partially or completely invisible. Be careful not to break the focus indication when using `overflow: hidden`.\n\n## CSS\n\n- The default browser focus outline must not be removed, but it may be replaced by something better suited for the design.\n- The default browser focus outline is not perceivable on certain background colors, so for many designs it is benificial to replace the default styling with a higher contrast focus ring.\n- When CSS outline properties are set to a CSS variable, make sure use `revert` as fallback value: this way the default styling is not removed when the custom property is not set.\n\n## Related reading\n\n- [Giving users and developers more control over focus - Chromium Blog](https://blog.chromium.org/2020/09/giving-users-and-developers-more.html)\n- [The Focus-Indicated Pseudo-class: `:focus-visible` - W3C Selectors specification](https://www.w3.org/TR/selectors-4/#the-focus-visible-pseudo)\n- [Understanding WCAG Success Criterion 2.4.7: Focus visible](https://www.w3.org/TR/UNDERSTANDING-WCAG20/navigation-mechanisms-focus-visible.html)\n";var tokens=__webpack_require__("../../components/common/focus/tokens.json"),ComponentTokensSection=__webpack_require__("../../documentation/components/ComponentTokensSection.jsx"),design_tokens_dist=__webpack_require__("../../proprietary/design-tokens/dist/index.json"),jsx_runtime=__webpack_require__("../../node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.js");const bem=(block,modifiers,classNames)=>(0,clsx_m.Z)(block,classNames,modifiers&&Object.fromEntries(Object.entries(modifiers).filter((([key])=>key)).map((([key,value])=>[`${block}--${key}`,value])))),FocusHTMLExample=()=>'\n<div class="utrecht-html">\n  <div><a href="https://example.com" target="_new">example.com</a></div>\n  <div><input type="text"></div>\n  <div><input type="checkbox"></div>\n  <div><input type="radio"></div>\n  <div><select><option>Example</option></select></div>\n  <div><textarea></textarea></div>\n  <div><button type="button">Click me</button></div>\n</div>\n',FocusBEMExample=({modifiers={}})=>`\n<div>\n  <div><a href="https://example.com" target="_new" class="${bem("utrecht-link","utrecht-link--html-a",modifiers)}">example.com</a></div>\n  <div><input type="text" class="${bem("utrecht-textbox",modifiers,"utrecht-textbox--html-input")}"></div>\n  <div><input type="checkbox" class="${bem("utrecht-checkbox",modifiers,"utrecht-textbox--html-input")}"></div>\n  <div><input type="radio" class="${bem("utrecht-radio-button",modifiers,"utrecht-textbox--html-input")}"></div>\n  <div><select class="${bem("utrecht-select",modifiers,"utrecht-select--html-select")}"><option>Example</option></select></div>\n  <div><textarea class="${bem("utrecht-textarea",modifiers,"utrecht-textarea--html-textarea")}"></textarea></div>\n  <div><button type="button" class="${bem("utrecht-button",modifiers)}">Click me</button></div>\n</div>\n`;function _createMdxContent(props){const _components=Object.assign({h2:"h2",h3:"h3"},(0,lib.ah)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.h_,{title:"Common Patterns/Focus"}),"\n",(0,jsx_runtime.jsx)(dist.UG,{children:README_namespaceObject}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"example",children:"Example"}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"focusable",children:"Focusable"}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{name:"Focus with BEM",parameters:{chromatic:{disableSnapshot:!0}},children:FocusBEMExample.bind({})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"focused",children:"Focused"}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{name:"Focus with BEM and :focus",parameters:{chromatic:{disableSnapshot:!0}},args:{modifiers:{focus:!0}},children:FocusBEMExample.bind({})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"focus-visible",children:"Focus visible"}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{name:"Focus with BEM and :focus-visible",parameters:{chromatic:{disableSnapshot:!0}},args:{modifiers:{"focus-visible":!0}},children:FocusBEMExample.bind({})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"focus-and-focus-visible",children:"Focus and focus visible"}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{name:"Focus with BEM and both :focus and :focus-visible",parameters:{chromatic:{disableSnapshot:!0}},args:{modifiers:{focus:!0,"focus-visible":!0}},children:FocusBEMExample.bind({})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"focusable-html",children:"Focusable HTML"}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{name:"Focus with HTML",parameters:{chromatic:{disableSnapshot:!0}},children:FocusHTMLExample.bind({})})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"design-tokens",children:"Design Tokens"}),"\n",(0,jsx_runtime.jsx)(ComponentTokensSection.k,{tokens:design_tokens_dist,definition:tokens,component:"utrecht-focus"})]})}const focusWithBem=FocusBEMExample.bind({});focusWithBem.storyName="Focus with BEM",focusWithBem.parameters={storySource:{source:'({\n  modifiers = {}\n}) => `\n<div>\n  <div><a href="https://example.com" target="_new" class="${bem("utrecht-link", "utrecht-link--html-a", modifiers)}">example.com</a></div>\n  <div><input type="text" class="${bem("utrecht-textbox", modifiers, "utrecht-textbox--html-input")}"></div>\n  <div><input type="checkbox" class="${bem("utrecht-checkbox", modifiers, "utrecht-textbox--html-input")}"></div>\n  <div><input type="radio" class="${bem("utrecht-radio-button", modifiers, "utrecht-textbox--html-input")}"></div>\n  <div><select class="${bem("utrecht-select", modifiers, "utrecht-select--html-select")}"><option>Example</option></select></div>\n  <div><textarea class="${bem("utrecht-textarea", modifiers, "utrecht-textarea--html-textarea")}"></textarea></div>\n  <div><button type="button" class="${bem("utrecht-button", modifiers)}">Click me</button></div>\n</div>\n`'},chromatic:{disableSnapshot:!0}};const focusWithBemAndFocus=FocusBEMExample.bind({});focusWithBemAndFocus.storyName="Focus with BEM and :focus",focusWithBemAndFocus.args={modifiers:{focus:!0}},focusWithBemAndFocus.parameters={storySource:{source:'({\n  modifiers = {}\n}) => `\n<div>\n  <div><a href="https://example.com" target="_new" class="${bem("utrecht-link", "utrecht-link--html-a", modifiers)}">example.com</a></div>\n  <div><input type="text" class="${bem("utrecht-textbox", modifiers, "utrecht-textbox--html-input")}"></div>\n  <div><input type="checkbox" class="${bem("utrecht-checkbox", modifiers, "utrecht-textbox--html-input")}"></div>\n  <div><input type="radio" class="${bem("utrecht-radio-button", modifiers, "utrecht-textbox--html-input")}"></div>\n  <div><select class="${bem("utrecht-select", modifiers, "utrecht-select--html-select")}"><option>Example</option></select></div>\n  <div><textarea class="${bem("utrecht-textarea", modifiers, "utrecht-textarea--html-textarea")}"></textarea></div>\n  <div><button type="button" class="${bem("utrecht-button", modifiers)}">Click me</button></div>\n</div>\n`'},chromatic:{disableSnapshot:!0}};const focusWithBemAndFocusVisible=FocusBEMExample.bind({});focusWithBemAndFocusVisible.storyName="Focus with BEM and :focus-visible",focusWithBemAndFocusVisible.args={modifiers:{"focus-visible":!0}},focusWithBemAndFocusVisible.parameters={storySource:{source:'({\n  modifiers = {}\n}) => `\n<div>\n  <div><a href="https://example.com" target="_new" class="${bem("utrecht-link", "utrecht-link--html-a", modifiers)}">example.com</a></div>\n  <div><input type="text" class="${bem("utrecht-textbox", modifiers, "utrecht-textbox--html-input")}"></div>\n  <div><input type="checkbox" class="${bem("utrecht-checkbox", modifiers, "utrecht-textbox--html-input")}"></div>\n  <div><input type="radio" class="${bem("utrecht-radio-button", modifiers, "utrecht-textbox--html-input")}"></div>\n  <div><select class="${bem("utrecht-select", modifiers, "utrecht-select--html-select")}"><option>Example</option></select></div>\n  <div><textarea class="${bem("utrecht-textarea", modifiers, "utrecht-textarea--html-textarea")}"></textarea></div>\n  <div><button type="button" class="${bem("utrecht-button", modifiers)}">Click me</button></div>\n</div>\n`'},chromatic:{disableSnapshot:!0}};const focusWithBemAndBothFocusAndFocusVisible=FocusBEMExample.bind({});focusWithBemAndBothFocusAndFocusVisible.storyName="Focus with BEM and both :focus and :focus-visible",focusWithBemAndBothFocusAndFocusVisible.args={modifiers:{focus:!0,"focus-visible":!0}},focusWithBemAndBothFocusAndFocusVisible.parameters={storySource:{source:'({\n  modifiers = {}\n}) => `\n<div>\n  <div><a href="https://example.com" target="_new" class="${bem("utrecht-link", "utrecht-link--html-a", modifiers)}">example.com</a></div>\n  <div><input type="text" class="${bem("utrecht-textbox", modifiers, "utrecht-textbox--html-input")}"></div>\n  <div><input type="checkbox" class="${bem("utrecht-checkbox", modifiers, "utrecht-textbox--html-input")}"></div>\n  <div><input type="radio" class="${bem("utrecht-radio-button", modifiers, "utrecht-textbox--html-input")}"></div>\n  <div><select class="${bem("utrecht-select", modifiers, "utrecht-select--html-select")}"><option>Example</option></select></div>\n  <div><textarea class="${bem("utrecht-textarea", modifiers, "utrecht-textarea--html-textarea")}"></textarea></div>\n  <div><button type="button" class="${bem("utrecht-button", modifiers)}">Click me</button></div>\n</div>\n`'},chromatic:{disableSnapshot:!0}};const focusWithHtml=FocusHTMLExample.bind({});focusWithHtml.storyName="Focus with HTML",focusWithHtml.parameters={storySource:{source:'() => `\n<div class="utrecht-html">\n  <div><a href="https://example.com" target="_new">example.com</a></div>\n  <div><input type="text"></div>\n  <div><input type="checkbox"></div>\n  <div><input type="radio"></div>\n  <div><select><option>Example</option></select></div>\n  <div><textarea></textarea></div>\n  <div><button type="button">Click me</button></div>\n</div>\n`'},chromatic:{disableSnapshot:!0}};const componentMeta={title:"Common Patterns/Focus",tags:["stories-mdx"],includeStories:["focusWithBem","focusWithBemAndFocus","focusWithBemAndFocusVisible","focusWithBemAndBothFocusAndFocusVisible","focusWithHtml"]};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}};const readme_stories=componentMeta},"../../documentation/components/ComponentTokensSection.jsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{k:()=>ComponentTokensSection});var prop_types=__webpack_require__("../../node_modules/.pnpm/prop-types@15.8.1/node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),DesignTokensTable=(__webpack_require__("../../node_modules/.pnpm/react@18.2.0/node_modules/react/index.js"),__webpack_require__("../../documentation/components/DesignTokensTable.jsx"));const isHiddenDesignToken=token=>!!token&&!!token.$extensions&&!0===token.$extensions["nl.nldesignsystem.hidden"];var jsx_runtime=__webpack_require__("../../node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.js");const ComponentTokensTable=({component,tokens})=>{const componentPath=["utrecht",component.replace(/^(example|denhaag|utrecht)-/,"")],subset=tokens.filter((token=>componentPath.every(((name,index)=>token.path[index]===name)))).filter((token=>!isHiddenDesignToken(token)));return 0===subset.length?(0,jsx_runtime.jsxs)("p",{children:["This component has ",(0,jsx_runtime.jsx)("strong",{children:"no documented design tokens"}),"."]}):(0,jsx_runtime.jsx)(DesignTokensTable.V,{tokens:subset})};ComponentTokensTable.displayName="ComponentTokensTable",ComponentTokensTable.propTypes={component:prop_types_default().string.isRequired,tokens:prop_types_default().arrayOf(prop_types_default().shape({comment:prop_types_default().string,name:prop_types_default().string,path:prop_types_default().arrayOf(prop_types_default().string),value:prop_types_default().oneOfType([prop_types_default().string,prop_types_default().number])}))};var lodash_isplainobject=__webpack_require__("../../node_modules/.pnpm/lodash.isplainobject@4.0.6/node_modules/lodash.isplainobject/index.js"),lodash_isplainobject_default=__webpack_require__.n(lodash_isplainobject);const CopyButton=({value,textContent="Copy"})=>(0,jsx_runtime.jsx)("button",{className:"utrecht-button utrecht-button--secondary-action utrecht-button--html-button",style:{cursor:"copy"},onClick:()=>navigator.clipboard.writeText(value),type:"button",children:textContent});CopyButton.displayName="CopyButton",CopyButton.propTypes={value:prop_types_default().string.isRequired,textContent:prop_types_default().string};const traverseDeep=(root,parents,current,valueTest,callback)=>{valueTest(current)?callback(parents,current):lodash_isplainobject_default()(current)&&Object.entries(current).forEach((([key,value])=>{traverseDeep(root,[...parents,key],value,valueTest,callback)}))},isDesignTokenDefinition=value=>(value=>Object.prototype.hasOwnProperty.call(value,"value")||Object.prototype.hasOwnProperty.call(value,"$value"))(value)||Object.prototype.hasOwnProperty.call(value,"css")||Object.prototype.hasOwnProperty.call(value,"$extensions"),tokensToCSS=tokens=>{const lines=[];return((tokens,callback)=>{traverseDeep(tokens,[],tokens,isDesignTokenDefinition,callback)})(tokens,((path,value)=>{isHiddenDesignToken(value)||lines.push(`  /* --${path.join("-")}: ${value&&value.$extensions&&value.$extensions["nl.nldesignsystem.css.property"]&&value.$extensions["nl.nldesignsystem.css.property"].syntax?value.$extensions["nl.nldesignsystem.css.property"].syntax:"<value>"}; */`)})),`.your-theme {\n  /* Uncomment each custom property you need */\n${lines.join("\n")}\n}`},ExampleTokensCSS=({definition})=>{const code=tokensToCSS(definition);return(0,jsx_runtime.jsxs)("section",{children:[(0,jsx_runtime.jsxs)("h2",{children:["Template for ",(0,jsx_runtime.jsx)("samp",{children:"your-theme.css"})]}),(0,jsx_runtime.jsx)("p",{children:"If you do not (yet) want to manage your design tokens in JSON files, but when you just want to get started quickly to reuse our CSS component with your own design, then you can use this CSS template as a starting point to see what parts of the component you can customize with design tokens."}),(0,jsx_runtime.jsxs)("p",{children:["Combine the design tokens CSS with our"," ",(0,jsx_runtime.jsx)("a",{href:"https://npmjs.com/package/@utrecht/component-library-css",children:"CSS component library pacakge on npm"}),", and you should be able to quickly and easily create a web page with our components and your own design."]}),(0,jsx_runtime.jsx)("div",{children:(0,jsx_runtime.jsx)(CopyButton,{value:code,textContent:"Copy CSS"})}),(0,jsx_runtime.jsx)("pre",{children:code})]})};ExampleTokensCSS.displayName="ExampleTokensCSS",ExampleTokensCSS.propTypes={definition:prop_types_default().object.isRequired};var lodash_clonedeepwith=__webpack_require__("../../node_modules/.pnpm/lodash.clonedeepwith@4.5.0/node_modules/lodash.clonedeepwith/index.js"),lodash_clonedeepwith_default=__webpack_require__.n(lodash_clonedeepwith),lodash_mapvalues=__webpack_require__("../../node_modules/.pnpm/lodash.mapvalues@4.6.0/node_modules/lodash.mapvalues/index.js"),lodash_mapvalues_default=__webpack_require__.n(lodash_mapvalues),lodash_omitby=__webpack_require__("../../node_modules/.pnpm/lodash.omitby@4.6.0/node_modules/lodash.omitby/index.js"),lodash_omitby_default=__webpack_require__.n(lodash_omitby);const ExampleTokensJSON=({definition})=>{const filter=item=>lodash_isplainobject_default()(item.$extensions)||lodash_isplainobject_default()(item.$value)?{}:lodash_isplainobject_default()(item)?lodash_mapvalues_default()(lodash_omitby_default()(item,(item=>isHiddenDesignToken(item))),(item=>lodash_clonedeepwith_default()(item,filter))):void 0,tokens=lodash_clonedeepwith_default()(definition,filter),code=JSON.stringify(tokens,null,"  ");return(0,jsx_runtime.jsxs)("section",{children:[(0,jsx_runtime.jsxs)("h2",{children:["Template ",(0,jsx_runtime.jsx)("samp",{children:"tokens.json"})," for your theme"]}),(0,jsx_runtime.jsxs)("p",{children:["We use the ",(0,jsx_runtime.jsx)("a",{href:"https://design-tokens.github.io/community-group/format/",children:"Design Tokens Format"})," to store our design choices in JSON files. These ",(0,jsx_runtime.jsx)("code",{children:"tokens.json"})," files are translated into other formats such as CSS and SCSS variables, so the design choices can be imported automatically into projects with varying technical stacks."]}),(0,jsx_runtime.jsx)("p",{children:"When we develop front-end components in CSS, we avoid putting design decisions in our CSS code directly. Instead we use CSS variables that reference the design tokens. This way we don't need to change the CSS components when over time we make different design decisions, we just include the latest export of the design tokens."}),(0,jsx_runtime.jsx)("p",{children:"Because our CSS components are coded in such a way that design decisions —such as fonts, colors and sizes— are stored in an optional file that you don't have to use, you can reuse our CSS components and combine them with design decisions for your own project and brand."}),(0,jsx_runtime.jsxs)("p",{children:["Copy the JSON template below if you want to reuse this component, and replace the empty placeholder object with your own code:",(0,jsx_runtime.jsx)("code",{children:'{ "value": "#123456", "comment": "my design choice" }'}),"."]}),(0,jsx_runtime.jsxs)("p",{children:["When you have a collection of design token JSON files, you can use"," ",(0,jsx_runtime.jsx)("a",{href:"https://amzn.github.io/style-dictionary/#/",children:"Style Dictionary"})," to translate them to CSS or any other format your developers need."]}),(0,jsx_runtime.jsx)("div",{children:(0,jsx_runtime.jsx)(CopyButton,{value:code,textContent:"Copy JSON"})}),(0,jsx_runtime.jsx)("pre",{children:code})]})};ExampleTokensJSON.displayName="ExampleTokensJSON",ExampleTokensJSON.propTypes={definition:prop_types_default().object.isRequired};const ComponentTokensSection=({component,tokens,definition})=>(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[definition?(0,jsx_runtime.jsx)(ExampleTokensJSON,{definition}):"",definition?(0,jsx_runtime.jsx)(ExampleTokensCSS,{definition}):"",(0,jsx_runtime.jsx)(ComponentTokensTable,{component,tokens})]});ComponentTokensSection.propTypes={component:prop_types_default().string.isRequired,definition:prop_types_default().object,tokens:prop_types_default().arrayOf(prop_types_default().shape({comment:prop_types_default().string,name:prop_types_default().string,path:prop_types_default().arrayOf(prop_types_default().string),value:prop_types_default().oneOfType([prop_types_default().string,prop_types_default().number])})).isRequired}},"../../components/common/focus/tokens.json":module=>{module.exports=JSON.parse('{"utrecht":{"focus":{"background-color":{"$extensions":{"nl.nldesignsystem.css.property":{"syntax":"<color>","inherits":true}},"type":"color"},"color":{"$extensions":{"nl.nldesignsystem.css.property":{"syntax":"<color>","inherits":true}},"type":"color"},"outline-color":{"$extensions":{"nl.nldesignsystem.css.property":{"syntax":"<color>","inherits":true}},"style":"color"},"outline-offset":{"$extensions":{"nl.nldesignsystem.css.property":{"syntax":"<length>","inherits":true}},"type":"other"},"outline-style":{"$extensions":{"nl.nldesignsystem.css.property":{"syntax":"dotted | none | solid","inherits":true}},"type":"other"},"outline-width":{"$extensions":{"nl.nldesignsystem.css.property":{"syntax":"<length>","inherits":true}},"style":"borderWidth"},"inverse":{"outline-color":{"$extensions":{"nl.nldesignsystem.css.property":{"syntax":"<color>","inherits":true}},"style":"color"}}}}}')}}]);