"use strict";(self.webpackChunk_utrecht_storybook=self.webpackChunk_utrecht_storybook||[]).push([[86632],{"../../node_modules/.pnpm/@mdx-js+react@2.3.0_react@18.2.0/node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{NF:()=>withMDXComponents,Zo:()=>MDXProvider,ah:()=>useMDXComponents,pC:()=>MDXContext});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/.pnpm/react@18.2.0/node_modules/react/index.js");const MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext({});function withMDXComponents(Component){return function boundMDXComponent(props){const allComponents=useMDXComponents(props.components);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component,{...props,allComponents})}}function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((()=>"function"==typeof components?components(contextComponents):{...contextComponents,...components}),[contextComponents,components])}const emptyObject={};function MDXProvider({components,children,disableParentContext}){let allComponents;return allComponents=disableParentContext?"function"==typeof components?components({}):components||emptyObject:useMDXComponents(components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},children)}},"./stories/formio-component/component-library-formio.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__page:()=>__page,default:()=>component_library_formio_stories});__webpack_require__("../../node_modules/.pnpm/react@18.2.0/node_modules/react/index.js");var lib=__webpack_require__("../../node_modules/.pnpm/@mdx-js+react@2.3.0_react@18.2.0/node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("../../node_modules/.pnpm/@storybook+blocks@7.4.0_@types+react-dom@18.2.7_@types+react@18.2.21_react-dom@18.2.0_react@18.2.0/node_modules/@storybook/blocks/dist/index.mjs");const READMEraw_namespaceObject='\x3c!-- @license CC0-1.0 --\x3e\n\n# Form.io Components\n\nThe `@utrecht/component-library-formio` package contains implementations of various form related components. It currently is a mix of CSS components and Web components. This means you need to install the following three packages:\n\n## Installation\n\n```shell\nnpm install --save-dev --save-exact \\\n  @utrecht/component-library-css \\\n  @utrecht/component-library-formio \\\n  @utrecht/web-component-library-stencil\n```\n\nAdditionally, having the core Form.io packages installed is a prerequisite:\n\n```shell\nnpm install --save-dev --save-exact formiojs react-formio\n```\n\nConfigure Form.io to use our custom components instead by including the following code in your app once:\n\n```ts\nimport { Formio, Templates } from "react-formio";\nimport { components, templates } from "@utrecht/component-library-formio";\n\nFormio.use({ components });\nTemplates.current = templates;\n```\n\nSince the implementation of the web components needs to be loaded in the browser, include the following effect to import web component library from `@utrecht/web-component-library-stencil`, in Next.js this would be in `_app.ts`:\n\n```js\nuseEffect(() => {\n  import("@utrecht/web-component-library-stencil/dist/utrecht/utrecht.esm.js");\n}, []);\n```\n\n## Create a form\n\nBecause the components use Web components internally, it is important to include the web components in the allow list of [DOMPurify](https://github.com/cure53/DOMPurify), which would otherwise remove these essential custom elements as part of the cross-site scripting mitigations:\n\n```jsx\nimport { Form } from \'react-formio\';\nimport { sanitizeConfig } from "@utrecht/component-library-formio";\n\nexport const Page () => (<Form options={{ sanitizeConfig }}/>)\n```\n\nEvery `<Form>` element must be configured with the correct `sanitizeConfig` settings, otherwise the form inputs cannot be displayed.\n\n## Theming\n\nTo use the Utrecht theme for the components, include the design tokens CSS in your `angular.json`:\n\n```shell\nnpm install --save-dev --save-exact @utrecht/design-tokens\n```\n\nInclude the CSS variables in your page, and apply the `utrecht-theme` class name.\n\n```js\nimport "@utrecht/design-tokens/dist/index.css";\n```\n';var jsx_runtime=__webpack_require__("../../node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.js");function _createMdxContent(props){return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.h_,{title:"Form.io Component/README"}),"\n",(0,jsx_runtime.jsx)(dist.UG,{children:READMEraw_namespaceObject})]})}const __page=()=>{throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};const componentMeta={title:"Form.io Component/README",tags:["stories-mdx"],includeStories:["__page"]};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent()}};const component_library_formio_stories=componentMeta}}]);