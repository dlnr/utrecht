/*! For license information please see components-FormFieldset-stories.ab60c6d2.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunk_utrecht_storybook=self.webpackChunk_utrecht_storybook||[]).push([[84807],{"./stories/components/FormFieldset.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,DesignTokens:()=>DesignTokens,Disabled:()=>Disabled,Div:()=>Div,Invalid:()=>Invalid,Section:()=>Section,WithoutCSS:()=>WithoutCSS,__namedExportsOrder:()=>__namedExportsOrder,default:()=>FormFieldset_stories});var css_module=__webpack_require__("../component-library-react/dist/css-module/index.mjs"),READMEraw=__webpack_require__("../../components/form-fieldset/README.md?raw"),tokens=__webpack_require__("../../components/form-fieldset/tokens.json"),dist=__webpack_require__("../../proprietary/design-tokens/dist/index.json"),clsx_m=__webpack_require__("../../node_modules/.pnpm/clsx@1.2.1/node_modules/clsx/dist/clsx.m.js"),jsx_runtime=(__webpack_require__("../../node_modules/.pnpm/react@18.2.0/node_modules/react/index.js"),__webpack_require__("../../node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.js"));const FormFieldsetLegendDiv=({className,disabled,...restProps})=>(0,jsx_runtime.jsx)("div",{className:(0,clsx_m.Z)("utrecht-form-fieldset__legend",{"utrecht-form-fieldset__legend--disabled":disabled,className}),...restProps});FormFieldsetLegendDiv.displayName="FormFieldsetLegendDiv";const FormFieldsetDiv=({className,children,disabled=!1,id,invalid,legend,role,section,...restProps})=>{const labelId=id&&`${id}-legend`,content=(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[legend&&(0,jsx_runtime.jsx)(FormFieldsetLegendDiv,{id:labelId,children:legend}),children]});return(0,jsx_runtime.jsx)("div",{className:(0,clsx_m.Z)("utrecht-form-fieldset",{"utrecht-form-fieldset--invalid":invalid,"utrecht-form-fieldset--section":section,className}),"aria-disabled":disabled?"true":void 0,"aria-invalid":invalid?"true":void 0,role:role||"group","aria-labelledby":labelId,...restProps,children:content})};FormFieldsetDiv.displayName="FormFieldsetDiv";try{FormFieldsetLegendDiv.displayName="FormFieldsetLegendDiv",FormFieldsetLegendDiv.__docgenInfo={description:"",displayName:"FormFieldsetLegendDiv",props:{disabled:{defaultValue:{value:"false"},description:"",name:"disabled",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/components/FormFieldsetDiv.tsx#FormFieldsetLegendDiv"]={docgenInfo:FormFieldsetLegendDiv.__docgenInfo,name:"FormFieldsetLegendDiv",path:"stories/components/FormFieldsetDiv.tsx#FormFieldsetLegendDiv"})}catch(__react_docgen_typescript_loader_error){}try{FormFieldsetDiv.displayName="FormFieldsetDiv",FormFieldsetDiv.__docgenInfo={description:"",displayName:"FormFieldsetDiv",props:{disabled:{defaultValue:{value:"false"},description:"",name:"disabled",required:!1,type:{name:"boolean"}},invalid:{defaultValue:null,description:"",name:"invalid",required:!1,type:{name:"boolean"}},legend:{defaultValue:null,description:"",name:"legend",required:!1,type:{name:"ReactNode"}},section:{defaultValue:null,description:"",name:"section",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/components/FormFieldsetDiv.tsx#FormFieldsetDiv"]={docgenInfo:FormFieldsetDiv.__docgenInfo,name:"FormFieldsetDiv",path:"stories/components/FormFieldsetDiv.tsx#FormFieldsetDiv"})}catch(__react_docgen_typescript_loader_error){}var util=__webpack_require__("./stories/components/util.tsx");const meta={title:"CSS Component/Form fieldset",id:"css-form-fieldset",component:({children,element,legend,legendId,section,...restProps})=>"div"===element?(0,jsx_runtime.jsxs)(FormFieldsetDiv,{section,...restProps,children:[legend&&(0,jsx_runtime.jsx)(FormFieldsetLegendDiv,{id:legendId,children:legend}),children]}):(0,jsx_runtime.jsxs)(css_module.pg,{className:(0,clsx_m.Z)({"utrecht-form-fieldset--section":section}),...restProps,children:[legend&&(0,jsx_runtime.jsx)(css_module.Qv,{id:legendId,children:legend}),children]}),argTypes:{disabled:{description:"Disabled",control:"boolean"},children:{description:"Set the content of the fieldset",control:"text"},element:{description:"HTML element",control:{type:"select"},options:["div","fieldset"]},invalid:{description:"Invalid",control:"boolean"},legend:{description:"Set the content of the legend",control:"text"},role:{control:{type:"select"},options:{"":void 0,group:"group",radiogroup:"radiogroup"}},section:{description:"Section appearance",type:"boolean"}},args:{disabled:!1,element:"fieldset",children:"",invalid:!1,legend:"",section:!1},parameters:{tokensPrefix:"utrecht-form-fieldset",status:{type:"WORK IN PROGRESS"},tokens:dist,tokensDefinition:tokens,docs:{description:{component:READMEraw}}}},FormFieldset_stories=meta,Default={args:{disabled:!1,children:(0,jsx_runtime.jsx)(css_module.nv,{children:"Fieldset body"}),legend:"Fieldset legend"},parameters:{docs:{description:{story:"Markup using the `<fieldset>` and `<legend>` HTML elements, wrapped in `<div>` element to support full CSS styling. Styling via `utrecht-form-fieldset` class name.\n  \n  `<fieldset>` is preferred as markup, because the automatic labelling via `<legend>` is less likely to break than `aria-labelledby`, and when the CSS can not be loaded, the visual representation is still clear to the user."}}}},WithoutCSS={args:{disabled:!1,children:(0,jsx_runtime.jsx)(css_module.nv,{children:"Fieldset body"}),legend:"Fieldset legend"},decorators:[Story=>(0,jsx_runtime.jsx)("div",{className:"no-style-decorator",children:Story()})],name:"Without CSS",parameters:{chromatic:{disableSnapshot:!0},docs:{description:{story:"When the CSS can not be loaded, the visual representation is still clear to the user."}}}},Div={args:{...Default.args,element:"div",legendId:"e7d3424c-8034-4494-9a52-110c2e5f6f4c"},name:"<div> as markup",parameters:{docs:{description:{story:'Markup using only `<div>` HTML elements. This is not the recommended markup, but the CSS implementation should support this flexibility anyway.\n\nSemantics built into the `<fieldset>` and `<legend>` elements must now be specified explicitly: `role="group"` for the fieldset (but `role="radiogroup"` is OK too), and the legend must explicitly be associated with the group using `aria-labelledby`.\n\nThe `disabled` effect from `<fieldset>` will no longer work, so all form controls must be set to `disabled` individually.'}}}},Disabled={args:{...Default.args,disabled:!0},name:"Disabled",parameters:{docs:{description:{story:"Styling via the `.utrecht-form-fieldset__legend--disabled` class names."}}}},Section={args:{...Default.args,section:!0},name:"Section",parameters:{docs:{description:{story:"Styling via the `.utrecht-form-fieldset` and `.utrecht-form-fieldset--section` class names."}}}},Invalid={args:{...Default.args,invalid:!0},name:"Invalid",parameters:{docs:{description:{story:"Styling via the `.utrecht-form-fieldset__legend--invalid` class names."}}}},DesignTokens=(0,util.$)(meta);Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {\n    disabled: false,\n    children: <Paragraph>Fieldset body</Paragraph>,\n    legend: 'Fieldset legend'\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: `Markup using the \\`<fieldset>\\` and \\`<legend>\\` HTML elements, wrapped in \\`<div>\\` element to support full CSS styling. Styling via \\`utrecht-form-fieldset\\` class name.\n  \n  \\`<fieldset>\\` is preferred as markup, because the automatic labelling via \\`<legend>\\` is less likely to break than \\`aria-labelledby\\`, and when the CSS can not be loaded, the visual representation is still clear to the user.`\n      }\n    }\n  }\n}",...Default.parameters?.docs?.source}}},WithoutCSS.parameters={...WithoutCSS.parameters,docs:{...WithoutCSS.parameters?.docs,source:{originalSource:"{\n  args: {\n    disabled: false,\n    children: <Paragraph>Fieldset body</Paragraph>,\n    legend: 'Fieldset legend'\n  },\n  decorators: [Story => <div className=\"no-style-decorator\">{Story()}</div>],\n  name: 'Without CSS',\n  parameters: {\n    chromatic: {\n      disableSnapshot: true\n    },\n    docs: {\n      description: {\n        story: 'When the CSS can not be loaded, the visual representation is still clear to the user.'\n      }\n    }\n  }\n}",...WithoutCSS.parameters?.docs?.source}}},Div.parameters={...Div.parameters,docs:{...Div.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...Default.args,\n    element: 'div',\n    legendId: 'e7d3424c-8034-4494-9a52-110c2e5f6f4c'\n  },\n  name: '<div> as markup',\n  parameters: {\n    docs: {\n      description: {\n        story: `Markup using only \\`<div>\\` HTML elements. This is not the recommended markup, but the CSS implementation should support this flexibility anyway.\n\nSemantics built into the \\`<fieldset>\\` and \\`<legend>\\` elements must now be specified explicitly: \\`role=\"group\"\\` for the fieldset (but \\`role=\"radiogroup\"\\` is OK too), and the legend must explicitly be associated with the group using \\`aria-labelledby\\`.\n\nThe \\`disabled\\` effect from \\`<fieldset>\\` will no longer work, so all form controls must be set to \\`disabled\\` individually.`\n      }\n    }\n  }\n}",...Div.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...Default.args,\n    disabled: true\n  },\n  name: 'Disabled',\n  parameters: {\n    docs: {\n      description: {\n        story: 'Styling via the `.utrecht-form-fieldset__legend--disabled` class names.'\n      }\n    }\n  }\n}",...Disabled.parameters?.docs?.source}}},Section.parameters={...Section.parameters,docs:{...Section.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...Default.args,\n    section: true\n  },\n  name: 'Section',\n  parameters: {\n    docs: {\n      description: {\n        story: 'Styling via the `.utrecht-form-fieldset` and `.utrecht-form-fieldset--section` class names.'\n      }\n    }\n  }\n}",...Section.parameters?.docs?.source}}},Invalid.parameters={...Invalid.parameters,docs:{...Invalid.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...Default.args,\n    invalid: true\n  },\n  name: 'Invalid',\n  parameters: {\n    docs: {\n      description: {\n        story: 'Styling via the `.utrecht-form-fieldset__legend--invalid` class names.'\n      }\n    }\n  }\n}",...Invalid.parameters?.docs?.source}}},DesignTokens.parameters={...DesignTokens.parameters,docs:{...DesignTokens.parameters?.docs,source:{originalSource:"designTokenStory(meta)",...DesignTokens.parameters?.docs?.source}}};const __namedExportsOrder=["Default","WithoutCSS","Div","Disabled","Section","Invalid","DesignTokens"]}}]);