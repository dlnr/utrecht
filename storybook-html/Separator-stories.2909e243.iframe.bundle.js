/*! For license information please see Separator-stories.2909e243.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunk_utrecht_storybook_html=self.webpackChunk_utrecht_storybook_html||[]).push([[4853],{"./src/Separator.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,DesignTokens:()=>DesignTokens,Hidden:()=>Hidden,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Separator_stories});const tokens_namespaceObject=JSON.parse('{"utrecht":{"separator":{"color":{"$extensions":{"nl.nldesignsystem.css.property":{"syntax":"<color>","inherits":true}},"type":"color"},"block-size":{"$extensions":{"nl.nldesignsystem.css.property":{"syntax":"<length>","inherits":true}},"type":"sizing"},"margin-block-end":{"$extensions":{"nl.nldesignsystem.css.property":{"syntax":"<length>","inherits":true},"nl.nldesignsystem.figma.supports-token":false},"type":"spacing"},"margin-block-start":{"$extensions":{"nl.nldesignsystem.css.property":{"syntax":"<length>","inherits":true},"nl.nldesignsystem.figma.supports-token":false},"type":"spacing"}}}}');var dist=__webpack_require__("../../proprietary/design-tokens/dist/index.json"),_hiddenraw=(__webpack_require__("../../node_modules/.pnpm/react@18.2.0/node_modules/react/index.js"),__webpack_require__("./src/_hidden.md?raw")),decorator=__webpack_require__("./src/decorator.tsx"),design_token_story=__webpack_require__("./src/design-token-story.tsx"),htmlArgTypes=__webpack_require__("./src/util/htmlArgTypes.ts"),jsx_runtime=__webpack_require__("../../node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.js");const Separator=({...restProps})=>(0,jsx_runtime.jsx)("hr",{...restProps});Separator.displayName="Separator";const meta={title:"HTML Component/Separator",id:"html-separator",component:Separator,decorators:[decorator.j],argTypes:{hidden:htmlArgTypes.a},args:{hidden:!1},tags:["autodocs"],parameters:{status:{type:"WORK IN PROGRESS"},tokensPrefix:"utrecht-separator",tokens:dist,tokensDefinition:tokens_namespaceObject,docs:{description:{component:'\x3c!-- @license CC0-1.0 --\x3e\n\n# Separator\n\nScheidingslijnen worden gebruikt om de scanbaarheid van een lange contentpagina te vergroten.\n\n## Terminologie\n\n- **separator**, van de ARIA `role="separator"`. "hr" van `<hr>` uit HTML is te onduidelijk buiten de context van code, "horizontal rule" te specifieke beschrijving van de originele rendering in HTML. De "separator" zou er ook heel anders uit kunnen zien dan een "rule" (lijn), en bovendien kan er voor andere tekstrichtingen wel eens een verticale variant komen.\n\n"Divider" is ook een vaak gehoorde term hiervoor, misschien moet deze voor vindbaarheid ook genoemd worden in de documentatie.\n\n## Class names\n\n- `utrecht-separator`\n\n## Variant\n\n- horizontaal\n\n## Design tokens\n\nWe hebben de volgende CSS variabelen:\n\n- `utrecht-separator-color`\n- `utrecht-separator-width` - "width" is misschien verwarrend, voor de horizontale variant is "height" logischer. Wat zou een schrijf-richting-agnostische term hiervoor kunnen zijn?\n- `utrecht-separator-margin-block-start`\n- `utrecht-separator-margin-block-end`\n\n## Visueel design Utrecht\n\n8px dikke grijze lijn.\n'}}}},Separator_stories=meta,Default={parameters:{docs:{description:{story:"Markup using the `<hr>` element."}}}},Hidden={args:{...Default.args,hidden:!0},parameters:{docs:{description:{story:_hiddenraw}}}},DesignTokens=(0,design_token_story.$)(meta);Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  parameters: {\n    docs: {\n      description: {\n        story: 'Markup using the `<hr>` element.'\n      }\n    }\n  }\n}",...Default.parameters?.docs?.source}}},Hidden.parameters={...Hidden.parameters,docs:{...Hidden.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...Default.args,\n    hidden: true\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: hiddenDocs\n      }\n    }\n  }\n}",...Hidden.parameters?.docs?.source}}},DesignTokens.parameters={...DesignTokens.parameters,docs:{...DesignTokens.parameters?.docs,source:{originalSource:"designTokenStory(meta)",...DesignTokens.parameters?.docs?.source}}};const __namedExportsOrder=["Default","Hidden","DesignTokens"]},"./src/util/htmlArgTypes.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{a:()=>hidden});const hidden={description:"Hidden",control:"boolean"}},"./src/_hidden.md?raw":module=>{module.exports="\x3c!-- @license CC0-1.0 --\x3e\n\x3c!-- markdownlint-disable MD041 --\x3e\n\nThe global HTML attribute `hidden` should work as expected, and CSS properties such as `display: inline`, `display: block`, `display: flex` or `display: inline-flex` from the component stylesheet should not interfere with this behavior.\n"}}]);