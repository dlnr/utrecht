{"version":3,"file":"DataList-d7663da0.js","sources":["../../../component-library-react/src/DataList.tsx"],"sourcesContent":["import clsx from 'clsx';\nimport { ForwardedRef, forwardRef, HTMLAttributes, PropsWithChildren } from 'react';\n\nexport interface DataListProps extends HTMLAttributes<HTMLElement> {\n  appearance?: string;\n}\n\nexport const DataList = forwardRef(\n  (\n    { appearance, children, className, ...restProps }: PropsWithChildren<DataListProps>,\n    ref: ForwardedRef<HTMLDListElement>,\n  ) => {\n    return (\n      <dl\n        {...restProps}\n        className={clsx(\n          'utrecht-data-list',\n          'utrecht-data-list--html-dl',\n          appearance === 'rows' && 'utrecht-data-list--rows',\n          className,\n        )}\n        ref={ref}\n      >\n        {children}\n      </dl>\n    );\n  },\n);\n\nDataList.displayName = 'DataList';\n\nexport type DataListItemProps = HTMLAttributes<HTMLDivElement>;\n\nexport const DataListItem = forwardRef(\n  ({ children, className, ...restProps }: PropsWithChildren<DataListItemProps>, ref: ForwardedRef<HTMLDivElement>) => {\n    return (\n      <div {...restProps} className={clsx('utrecht-data-list__item', className)} ref={ref}>\n        {children}\n      </div>\n    );\n  },\n);\n\nDataListItem.displayName = 'DataListItem';\n\nexport type DataListKeyProps = HTMLAttributes<HTMLElement>;\n\nexport const DataListKey = forwardRef(\n  ({ children, className, ...restProps }: PropsWithChildren<DataListKeyProps>, ref: ForwardedRef<HTMLElement>) => {\n    return (\n      <dt {...restProps} className={clsx('utrecht-data-list__item-key', className)} ref={ref}>\n        {children}\n      </dt>\n    );\n  },\n);\n\nDataListKey.displayName = 'DataListKey';\n\nexport interface DataListValueProps extends HTMLAttributes<HTMLElement> {\n  value?: number | string;\n  emptyDescription?: string;\n  multiline?: boolean;\n  // We couldn't use `translate` as boolean input, because `HTMLElement` already implements it as `string`.\n  notranslate?: boolean;\n}\n\nexport const DataListValue = forwardRef(\n  (\n    { value, children, className, emptyDescription, multiline, notranslate }: PropsWithChildren<DataListValueProps>,\n    ref: ForwardedRef<HTMLElement>,\n  ) => {\n    const empty = value === '' || value === null;\n\n    return (\n      <dd\n        className={clsx(\n          'utrecht-data-list__item-value',\n          'utrecht-data-list__item-value--html-dd',\n          className,\n          multiline && 'utrecht-data-list__item-value--multiline',\n        )}\n        translate={typeof notranslate === 'boolean' ? (notranslate ? 'no' : 'yes') : undefined}\n        ref={ref}\n      >\n        {empty ? <span aria-label={emptyDescription}>-</span> : children}\n      </dd>\n    );\n  },\n);\n\nDataListValue.displayName = 'DataListValue';\n\nexport type DataListActionsProps = HTMLAttributes<HTMLElement>;\n\nexport const DataListActions = forwardRef(\n  ({ children, className, ...restProps }: PropsWithChildren<DataListActionsProps>, ref: ForwardedRef<HTMLElement>) => {\n    return (\n      <dd\n        {...restProps}\n        className={clsx('utrecht-data-list__actions', 'utrecht-data-list__actions--html-dd', className)}\n        ref={ref}\n      >\n        {children}\n      </dd>\n    );\n  },\n);\nDataListActions.displayName = 'DataListActions';\n"],"names":["DataList","forwardRef","appearance","children","className","restProps","ref","jsx","clsx","DataListItem","DataListKey","DataListValue","value","emptyDescription","multiline","notranslate","empty","DataListActions"],"mappings":"+HAOO,MAAAA,EAAAC,EAAA,WAAiB,CAAA,CAAA,WAAAC,EAAA,SAAAC,EAAA,UAAAC,EAAA,GAAAC,CAAA,EAAAC,IAKpBC,EACE,KAAC,CAAA,GAAAF,EACK,UAAAG,EACO,oBACT,6BACAN,IAAA,QAAA,0BACyBE,CACzB,EACF,IAAAE,EACA,SAAAH,CAEC,CAAA,CAIT,EAEAH,EAAA,YAAA,WAIO,MAAAS,EAAAR,EAAA,WAAqB,CAAA,CAAA,SAAAE,EAAA,UAAAC,EAAA,GAAAC,CAAA,EAAAC,IAExBC,EAAA,MAAA,CAAA,GAAAF,EAAA,UAAAG,EAAA,0BAAAJ,CAAA,EAAA,IAAAE,EAAA,SAAAH,CAAA,CAAA,CAMJ,EAEAM,EAAA,YAAA,eAIO,MAAAC,EAAAT,EAAA,WAAoB,CAAA,CAAA,SAAAE,EAAA,UAAAC,EAAA,GAAAC,CAAA,EAAAC,IAEvBC,EAAA,KAAA,CAAA,GAAAF,EAAA,UAAAG,EAAA,8BAAAJ,CAAA,EAAA,IAAAE,EAAA,SAAAH,CAAA,CAAA,CAMJ,EAEAO,EAAA,YAAA,cAUO,MAAAC,EAAAV,EAAA,WAAsB,CAAA,CAAA,MAAAW,EAAA,SAAAT,EAAA,UAAAC,EAAA,iBAAAS,EAAA,UAAAC,EAAA,YAAAC,CAAA,EAAAT,IAAA,CAKzB,MAAAU,EAAAJ,IAAA,IAAAA,IAAA,KAEA,OAAAL,EACE,KAAC,CAAA,UAAAC,EACY,gCACT,yCACAJ,EACAU,GAAA,0CACa,EACf,UAAA,OAAAC,GAAA,UAAAA,EAAA,KAAA,MAAA,OAC6E,IAAAT,EAC7E,SAAAU,EAAAT,EAAA,OAAA,CAAA,aAAAM,EAAA,SAAA,GAAA,CAAA,EAAAV,CAEwD,CAAA,CAC1D,CAGN,EAEAQ,EAAA,YAAA,gBAIO,MAAAM,EAAAhB,EAAA,WAAwB,CAAA,CAAA,SAAAE,EAAA,UAAAC,EAAA,GAAAC,CAAA,EAAAC,IAE3BC,EACE,KAAC,CAAA,GAAAF,EACK,UAAAG,EAAA,6BAAA,sCAAAJ,CAAA,EAC0F,IAAAE,EAC9F,SAAAH,CAEC,CAAA,CAIT,EACAc,EAAA,YAAA"}