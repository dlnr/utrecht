{"version":3,"file":"SkipLink.stories-56e14770.js","sources":["../../../../components/skip-link/README.md?raw","../../src/stories/SkipLink.stories.tsx"],"sourcesContent":["export default \"<!-- @license CC0-1.0 -->\\n\\n# Skip link\\n\"","import { Meta, StoryObj } from '@storybook/react';\nimport { SkipLink } from '@utrecht/component-library-react/dist/css-module/index';\nimport readme from '@utrecht/components/skip-link/README.md?raw';\nimport tokensDefinition from '@utrecht/components/skip-link/tokens.json';\nimport tokens from '@utrecht/design-tokens/dist/index.json';\nimport React from 'react';\nimport { designTokenStory } from './util';\n\n// `will-change: transform` will create a \"containing block\" that will contain `position: fixed` elements.\nconst ExampleViewport = Story => <div style={{\n  minHeight: '240px',\n  minWidth: '320px',\n  position: 'relative',\n  willChange: 'transform'\n}}>\n    {Story()}\n  </div>;\nExampleViewport.displayName = 'ExampleViewport';\nconst meta = ({\n  title: 'React Component/Skip link',\n  id: 'react-skip-link',\n  component: SkipLink,\n  href: {\n    name: 'href',\n    type: {\n      name: 'string',\n      required: true\n    },\n    table: {\n      category: 'HTML attribute',\n      defaultValue: {\n        summary: ''\n      }\n    }\n  },\n  decorators: [ExampleViewport],\n  tags: ['autodocs'],\n  parameters: {\n    tokensPrefix: 'utrecht-skip-link',\n    tokens,\n    tokensDefinition,\n    docs: {\n      description: {\n        component: readme\n      }\n    }\n  }\n} as Meta<typeof SkipLink>);\nexport default meta;\nconst Template: StoryObj<typeof SkipLink> = args => <SkipLink {...args} />;\nexport const Default = Template.bind({});\nDefault.args = {\n  href: '#main',\n  children: 'Skip to main content'\n};\n\n// Since skip link is not visible by default, simulate focus state by default\nDefault.parameters = {\n  pseudo: {\n    focus: true,\n    focusVisible: true\n  }\n};\nexport const DesignTokens = designTokenStory(meta);\nDefault.parameters = {\n  ...Default.parameters,\n  storySource: {\n    source: \"args => <SkipLink {...args} />\",\n    ...Default.parameters?.storySource\n  }\n};\nDesignTokens.parameters = {\n  ...DesignTokens.parameters,\n  storySource: {\n    source: \"designTokenStory(meta)\",\n    ...DesignTokens.parameters?.storySource\n  }\n};"],"names":["readme","ExampleViewport","Story","jsx","meta","SkipLink","tokens","tokensDefinition","Template","args","Default","DesignTokens","designTokenStory","_a"],"mappings":"+RAAA,MAAeA,EAAA;AAAA;AAAA;AAAA,0pBCSTC,EAAkBC,GAAUC,EAAA,MAAA,CAAI,MAAO,CAC3C,UAAW,QACX,SAAU,QACV,SAAU,WACV,WAAY,WACd,EACK,WACH,CAAA,CAAA,EACFF,EAAgB,YAAc,kBAC9B,MAAMG,EAAQ,CACZ,MAAO,4BACP,GAAI,kBACJ,UAAWC,EACX,KAAM,CACJ,KAAM,OACN,KAAM,CACJ,KAAM,SACN,SAAU,EACZ,EACA,MAAO,CACL,SAAU,iBACV,aAAc,CACZ,QAAS,EACX,CACF,CACF,EACA,WAAY,CAACJ,CAAe,EAC5B,KAAM,CAAC,UAAU,EACjB,WAAY,CACV,aAAc,oBACd,OAAAK,EACA,iBAAAC,EACA,KAAM,CACJ,YAAa,CACX,UAAWP,CACb,CACF,CACF,CACF,EAEMQ,EAAsCC,GAASN,EAAAE,EAAA,CAAU,GAAGI,CAAM,CAAA,EAC3DC,EAAUF,EAAS,KAAK,EAAE,EACvCE,EAAQ,KAAO,CACb,KAAM,QACN,SAAU,sBACZ,EAGAA,EAAQ,WAAa,CACnB,OAAQ,CACN,MAAO,GACP,aAAc,EAChB,CACF,EACa,MAAAC,EAAeC,EAAiBR,CAAI,QACjDM,EAAQ,WAAa,CACnB,GAAGA,EAAQ,WACX,YAAa,CACX,OAAQ,iCACR,IAAGG,EAAAH,EAAQ,aAAR,YAAAG,EAAoB,WACzB,CACF,QACAF,EAAa,WAAa,CACxB,GAAGA,EAAa,WAChB,YAAa,CACX,OAAQ,yBACR,IAAGE,EAAAF,EAAa,aAAb,YAAAE,EAAyB,WAC9B,CACF"}