{"version":3,"file":"Drawer.stories-92d77be1.js","sources":["../../../component-library-react/src/Drawer.tsx","../../../../components/drawer/README.md?raw"],"sourcesContent":["/**\n * @license EUPL-1.2\n * Copyright (c) 2021 Robbert Broersma\n */\n\nimport clsx from 'clsx';\nimport {\n  DialogHTMLAttributes,\n  ForwardedRef,\n  forwardRef,\n  PropsWithChildren,\n  useEffect,\n  useImperativeHandle,\n  useRef,\n} from 'react';\n\nexport type DrawerAlignType = 'block-end' | 'block-start' | 'inline-end' | 'inline-start';\n\nexport interface DrawerProps extends DialogHTMLAttributes<HTMLDialogElement> {\n  align?: string | DrawerAlignType;\n  modal?: boolean;\n}\n\nexport const Drawer = forwardRef(\n  (\n    { align, children, className, modal, ...restProps }: PropsWithChildren<DrawerProps>,\n    ref: ForwardedRef<HTMLDialogElement>,\n  ) => {\n    let dialogRef = useRef<HTMLDialogElement>(null);\n\n    useImperativeHandle(ref, () => dialogRef.current as HTMLDialogElement);\n\n    useEffect(() => {\n      if (modal && restProps.open && dialogRef?.current) {\n        // Dialog must not be `open` initially, prevent the following error:\n        // \"Cannot call showModal() on an open non-modal dialog\"\n        dialogRef.current.close();\n        dialogRef.current.showModal();\n      }\n    });\n\n    return (\n      <dialog\n        {...restProps}\n        ref={dialogRef}\n        className={clsx(\n          'utrecht-drawer',\n          {\n            'utrecht-drawer--block-end': align === 'block-end',\n            'utrecht-drawer--block-start': align === 'block-start',\n            'utrecht-drawer--inline-end': align === 'inline-end',\n            'utrecht-drawer--inline-start': align === 'inline-start' || !align,\n          },\n          className,\n        )}\n      >\n        {children}\n      </dialog>\n    );\n  },\n);\n\nDrawer.displayName = 'Drawer';\n","export default \"<!-- @license CC0-1.0 -->\\n\\n# Drawer component\\n\""],"names":["Drawer","forwardRef","align","children","className","modal","restProps","ref","dialogRef","useRef","useImperativeHandle","useEffect","jsx","clsx","readme"],"mappings":"iYAuBO,MAAAA,EAAAC,EAAA,WAAe,CAAA,CAAA,MAAAC,EAAA,SAAAC,EAAA,UAAAC,EAAA,MAAAC,EAAA,GAAAC,CAAA,EAAAC,IAAA,CAKlB,IAAAC,EAAAC,SAAA,IAAA,EAEAC,OAAAA,EAAAA,oBAAAH,EAAA,IAAAC,EAAA,OAAA,EAEAG,EAAAA,UAAA,IAAA,CACEN,GAAAC,EAAA,OAAAE,GAAA,MAAAA,EAAA,WAGEA,EAAA,QAAA,QACAA,EAAA,QAAA,YACF,CAAA,EAGFI,EACE,SAAC,CAAA,GAAAN,EACK,IAAAE,EACC,UAAAK,EACM,iBACT,CACA,4BAAAX,IAAA,YACyC,8BAAAA,IAAA,cACE,6BAAAA,IAAA,aACD,+BAAAA,IAAA,gBAAA,CAAAA,CACqB,EAC/DE,CACA,EACF,SAAAD,CAEC,CAAA,CACH,CAGN,EAEAH,EAAA,YAAA,uRC9DA,MAAec,EAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}