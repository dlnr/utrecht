{"version":3,"file":"FormFieldText.stories-7fb9f2dd.js","sources":["../../src/stories/FormFieldText.stories.tsx"],"sourcesContent":["import { Meta, StoryObj } from '@storybook/react';\nimport { FormField, FormFieldDescription, FormLabel, Paragraph, Textarea, Textbox } from '@utrecht/component-library-react';\nimport React from 'react';\nimport FormFieldMeta from './FormField.stories';\nconst storyArgTypes = {\n  ...FormFieldMeta.argTypes,\n  required: {\n    description: 'Required',\n    control: 'boolean',\n    table: {\n      category: 'Story',\n      defaultValue: {\n        summary: false\n      }\n    }\n  },\n  id: {\n    description: 'ID',\n    type: {\n      name: 'text',\n      required: true\n    },\n    table: {\n      category: 'Story',\n      defaultValue: {\n        summary: ''\n      }\n    }\n  },\n  name: {\n    description: 'Name',\n    control: 'text',\n    table: {\n      category: 'Story',\n      defaultValue: {\n        summary: ''\n      }\n    }\n  },\n  value: {\n    description: 'Value',\n    control: 'text',\n    table: {\n      category: 'Story',\n      defaultValue: {\n        summary: ''\n      }\n    }\n  },\n  label: {\n    name: 'label',\n    type: {\n      name: 'text',\n      required: true\n    },\n    table: {\n      defaultValue: {\n        summary: false\n      },\n      category: 'Story'\n    }\n  },\n  invalidDescription: {\n    name: 'invalidDescription',\n    description: 'Description for invalid input',\n    type: {\n      name: 'text',\n      required: false\n    },\n    table: {\n      defaultValue: {\n        summary: false\n      },\n      category: 'Story'\n    }\n  },\n  description: {\n    description: 'Description',\n    type: {\n      name: 'text',\n      required: false\n    },\n    table: {\n      category: 'Story',\n      defaultValue: {\n        summary: ''\n      }\n    }\n  }\n};\nconst meta = ({\n  title: 'React Component/Form Field/Textbox',\n  id: 'react-form-field',\n  component: FormField,\n  argTypes: storyArgTypes,\n  tags: ['autodocs']\n} as Meta<typeof FormField>);\nexport default meta;\nconst Template: StoryObj<typeof FormField> = args => {\n  const {\n    description,\n    disabled,\n    id,\n    Input,\n    invalid,\n    invalidDescription,\n    label,\n    name,\n    required,\n    value,\n    type\n  } = args;\n  const descriptionId = description ? `${id}-description` : null;\n  const invalidDescriptionId = invalidDescription ? `${id}-invalid-description` : null;\n  return <FormField invalid={invalid} type={type}>\n      <Paragraph className=\"utrecht-form-field__label\">\n        <FormLabel disabled={disabled} htmlFor={id}>\n          {label}\n        </FormLabel>\n      </Paragraph>\n      <Paragraph className=\"utrecht-form-field__input\">\n        <Input id={id} disabled={disabled} invalid={invalid} name={name} type={type} required={required} value={value} />\n      </Paragraph>\n      {description ? <FormFieldDescription id={descriptionId} className=\"utrecht-form-field__description\">\n          {description}\n        </FormFieldDescription> : undefined}\n      {invalidDescription ? <FormFieldDescription id={invalidDescriptionId} invalid className=\"utrecht-form-field__description\">\n          {invalidDescription}\n        </FormFieldDescription> : undefined}\n    </FormField>;\n};\nexport const FormFieldTextbox = Template.bind({});\nFormFieldTextbox.args = {\n  description: 'Maximaal 140 karakters',\n  disabled: false,\n  id: '3a43bbe9-635c-46c2-86cd-b0aa63855598',\n  invalid: true,\n  invalidDescription: 'Fout: het veld is nog leeg. Vul een bericht in.',\n  label: 'Tweet',\n  name: 'message',\n  value: '',\n  required: true,\n  type: 'text',\n  Input: Textbox\n};\nexport const FormFieldTextarea = Template.bind({});\nFormFieldTextarea.args = {\n  description: 'Maximaal 140 karakters',\n  disabled: false,\n  id: '3a43bbe9-635c-46c2-86cd-b0aa63855598',\n  invalid: true,\n  invalidDescription: 'Fout: het veld is nog leeg. Vul een bericht in.',\n  label: 'Tweet',\n  name: 'message',\n  value: '',\n  required: true,\n  type: 'text',\n  Input: Textarea\n};\nFormFieldTextbox.parameters = {\n  ...FormFieldTextbox.parameters,\n  docs: {\n    ...FormFieldTextbox.parameters?.docs,\n    source: {\n      originalSource: \"args => {\\n  const {\\n    description,\\n    disabled,\\n    id,\\n    Input,\\n    invalid,\\n    invalidDescription,\\n    label,\\n    name,\\n    required,\\n    value,\\n    type\\n  } = args;\\n  const descriptionId = description ? `${id}-description` : null;\\n  const invalidDescriptionId = invalidDescription ? `${id}-invalid-description` : null;\\n  return <FormField invalid={invalid} type={type}>\\n      <Paragraph className=\\\"utrecht-form-field__label\\\">\\n        <FormLabel disabled={disabled} htmlFor={id}>\\n          {label}\\n        </FormLabel>\\n      </Paragraph>\\n      <Paragraph className=\\\"utrecht-form-field__input\\\">\\n        <Input id={id} disabled={disabled} invalid={invalid} name={name} type={type} required={required} value={value} />\\n      </Paragraph>\\n      {description ? <FormFieldDescription id={descriptionId} className=\\\"utrecht-form-field__description\\\">\\n          {description}\\n        </FormFieldDescription> : undefined}\\n      {invalidDescription ? <FormFieldDescription id={invalidDescriptionId} invalid className=\\\"utrecht-form-field__description\\\">\\n          {invalidDescription}\\n        </FormFieldDescription> : undefined}\\n    </FormField>;\\n}\",\n      ...FormFieldTextbox.parameters?.docs?.source\n    }\n  }\n};\nFormFieldTextarea.parameters = {\n  ...FormFieldTextarea.parameters,\n  docs: {\n    ...FormFieldTextarea.parameters?.docs,\n    source: {\n      originalSource: \"args => {\\n  const {\\n    description,\\n    disabled,\\n    id,\\n    Input,\\n    invalid,\\n    invalidDescription,\\n    label,\\n    name,\\n    required,\\n    value,\\n    type\\n  } = args;\\n  const descriptionId = description ? `${id}-description` : null;\\n  const invalidDescriptionId = invalidDescription ? `${id}-invalid-description` : null;\\n  return <FormField invalid={invalid} type={type}>\\n      <Paragraph className=\\\"utrecht-form-field__label\\\">\\n        <FormLabel disabled={disabled} htmlFor={id}>\\n          {label}\\n        </FormLabel>\\n      </Paragraph>\\n      <Paragraph className=\\\"utrecht-form-field__input\\\">\\n        <Input id={id} disabled={disabled} invalid={invalid} name={name} type={type} required={required} value={value} />\\n      </Paragraph>\\n      {description ? <FormFieldDescription id={descriptionId} className=\\\"utrecht-form-field__description\\\">\\n          {description}\\n        </FormFieldDescription> : undefined}\\n      {invalidDescription ? <FormFieldDescription id={invalidDescriptionId} invalid className=\\\"utrecht-form-field__description\\\">\\n          {invalidDescription}\\n        </FormFieldDescription> : undefined}\\n    </FormField>;\\n}\",\n      ...FormFieldTextarea.parameters?.docs?.source\n    }\n  }\n};"],"names":["storyArgTypes","FormFieldMeta","meta","FormField","Template","args","description","disabled","id","Input","invalid","invalidDescription","label","name","required","value","type","descriptionId","invalidDescriptionId","jsxs","jsx","Paragraph","FormLabel","FormFieldDescription","FormFieldTextbox","Textbox","FormFieldTextarea","Textarea","_a","_c","_b"],"mappings":"0XAIA,MAAMA,EAAgB,CACpB,GAAGC,EAAc,SACjB,SAAU,CACR,YAAa,WACb,QAAS,UACT,MAAO,CACL,SAAU,QACV,aAAc,CACZ,QAAS,EACX,CACF,CACF,EACA,GAAI,CACF,YAAa,KACb,KAAM,CACJ,KAAM,OACN,SAAU,EACZ,EACA,MAAO,CACL,SAAU,QACV,aAAc,CACZ,QAAS,EACX,CACF,CACF,EACA,KAAM,CACJ,YAAa,OACb,QAAS,OACT,MAAO,CACL,SAAU,QACV,aAAc,CACZ,QAAS,EACX,CACF,CACF,EACA,MAAO,CACL,YAAa,QACb,QAAS,OACT,MAAO,CACL,SAAU,QACV,aAAc,CACZ,QAAS,EACX,CACF,CACF,EACA,MAAO,CACL,KAAM,QACN,KAAM,CACJ,KAAM,OACN,SAAU,EACZ,EACA,MAAO,CACL,aAAc,CACZ,QAAS,EACX,EACA,SAAU,OACZ,CACF,EACA,mBAAoB,CAClB,KAAM,qBACN,YAAa,gCACb,KAAM,CACJ,KAAM,OACN,SAAU,EACZ,EACA,MAAO,CACL,aAAc,CACZ,QAAS,EACX,EACA,SAAU,OACZ,CACF,EACA,YAAa,CACX,YAAa,cACb,KAAM,CACJ,KAAM,OACN,SAAU,EACZ,EACA,MAAO,CACL,SAAU,QACV,aAAc,CACZ,QAAS,EACX,CACF,CACF,CACF,EACMC,EAAQ,CACZ,MAAO,qCACP,GAAI,mBACJ,UAAWC,EACX,SAAUH,EACV,KAAM,CAAC,UAAU,CACnB,EAEMI,EAA+CC,GAAA,CAC7C,KAAA,CACJ,YAAAC,EACA,SAAAC,EACA,GAAAC,EACA,MAAAC,EACA,QAAAC,EACA,mBAAAC,EACA,MAAAC,EACA,KAAAC,EACA,SAAAC,EACA,MAAAC,EACA,KAAAC,CACE,EAAAX,EACEY,EAAgBX,EAAc,GAAGE,gBAAmB,KACpDU,EAAuBP,EAAqB,GAAGH,wBAA2B,KACzE,OAAAW,EAAChB,EAAU,CAAA,QAAAO,EAAkB,KAAAM,EAChC,SAAA,CAACI,EAAAC,EAAA,CAAU,UAAU,4BACnB,SAAAD,EAACE,GAAU,SAAAf,EAAoB,QAASC,EACrC,SAAAI,CAAA,CACH,CACF,CAAA,EACCQ,EAAAC,EAAA,CAAU,UAAU,4BACnB,SAACD,EAAAX,EAAA,CAAM,GAAAD,EAAQ,SAAAD,EAAoB,QAAAG,EAAkB,KAAAG,EAAY,KAAAG,EAAY,SAAAF,EAAoB,MAAAC,CAAc,CAAA,EACjH,EACCT,IAAeiB,EAAqB,CAAA,GAAIN,EAAe,UAAU,kCAC7D,UACH,CAAA,EAA0B,OAC3BN,EAAsBS,EAAAG,EAAA,CAAqB,GAAIL,EAAsB,QAAO,GAAC,UAAU,kCACnF,SAAAP,CACH,CAAA,EAA0B,MAC9B,CAAA,CAAA,CACJ,EACaa,EAAmBpB,EAAS,KAAK,EAAE,EAChDoB,EAAiB,KAAO,CACtB,YAAa,yBACb,SAAU,GACV,GAAI,uCACJ,QAAS,GACT,mBAAoB,kDACpB,MAAO,QACP,KAAM,UACN,MAAO,GACP,SAAU,GACV,KAAM,OACN,MAAOC,CACT,EACO,MAAMC,EAAoBtB,EAAS,KAAK,EAAE,EACjDsB,EAAkB,KAAO,CACvB,YAAa,yBACb,SAAU,GACV,GAAI,uCACJ,QAAS,GACT,mBAAoB,kDACpB,MAAO,QACP,KAAM,UACN,MAAO,GACP,SAAU,GACV,KAAM,OACN,MAAOC,CACT,YACAH,EAAiB,WAAa,CAC5B,GAAGA,EAAiB,WACpB,KAAM,CACJ,IAAGI,EAAAJ,EAAiB,aAAjB,YAAAI,EAA6B,KAChC,OAAQ,CACN,eAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAChB,IAAGC,GAAAC,EAAAN,EAAiB,aAAjB,YAAAM,EAA6B,OAA7B,YAAAD,EAAmC,MACxC,CACF,CACF,YACAH,EAAkB,WAAa,CAC7B,GAAGA,EAAkB,WACrB,KAAM,CACJ,IAAGE,EAAAF,EAAkB,aAAlB,YAAAE,EAA8B,KACjC,OAAQ,CACN,eAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAChB,IAAGC,GAAAC,EAAAJ,EAAkB,aAAlB,YAAAI,EAA8B,OAA9B,YAAAD,EAAoC,MACzC,CACF,CACF"}