{"version":3,"file":"Separator.stories-07e69bd3.js","sources":["../../../../components/separator/README.md?raw","../../src/stories/Separator.stories.tsx"],"sourcesContent":["export default \"<!-- @license CC0-1.0 -->\\n\\n# Separator\\n\\nScheidingslijnen worden gebruikt om de scanbaarheid van een lange contentpagina te vergroten.\\n\\n## Terminologie\\n\\n- **separator**, van de ARIA `role=\\\"separator\\\"`. \\\"hr\\\" van `<hr>` uit HTML is te onduidelijk buiten de context van code, \\\"horizontal rule\\\" te specifieke beschrijving van de originele rendering in HTML. De \\\"separator\\\" zou er ook heel anders uit kunnen zien dan een \\\"rule\\\" (lijn), en bovendien kan er voor andere tekstrichtingen wel eens een verticale variant komen.\\n\\n\\\"Divider\\\" is ook een vaak gehoorde term hiervoor, misschien moet deze voor vindbaarheid ook genoemd worden in de documentatie.\\n\\n## Class names\\n\\n- `utrecht-separator`\\n\\n## Variant\\n\\n- horizontaal\\n\\n## Design tokens\\n\\nWe hebben de volgende CSS variabelen:\\n\\n- `utrecht-separator-color`\\n- `utrecht-separator-width` - \\\"width\\\" is misschien verwarrend, voor de horizontale variant is \\\"height\\\" logischer. Wat zou een schrijf-richting-agnostische term hiervoor kunnen zijn?\\n- `utrecht-separator-margin-block-start`\\n- `utrecht-separator-margin-block-end`\\n\\n## Visueel design Utrecht\\n\\n8px dikke grijze lijn.\\n\"","import { ArgsTable, Description, Primary, PRIMARY_STORY, Stories } from '@storybook/addon-docs';\nimport { Meta, StoryObj } from '@storybook/react';\nimport { Separator } from '@utrecht/component-library-react/dist/css-module/index';\nimport readme from '@utrecht/components/separator/README.md?raw';\nimport tokensDefinition from '@utrecht/components/separator/tokens.json';\nimport tokens from '@utrecht/design-tokens/dist/index.json';\nimport React from 'react';\nimport { designTokenStory } from './util';\nconst meta = ({\n  title: 'React Component/Separator',\n  id: 'react-separator',\n  component: Separator,\n  parameters: {\n    tokensPrefix: 'utrecht-separator',\n    tokens,\n    tokensDefinition,\n    docs: {\n      page: () => <>\n          <Description markdown={readme} />\n          <Primary />\n          <ArgsTable story={PRIMARY_STORY} />\n          <Stories />\n        </>\n    }\n  }\n} satisfies Meta<typeof Separator>);\nexport default meta;\ntype Story = StoryObj<typeof meta>;\nexport const Default: Story = {};\nexport const DesignTokens = designTokenStory(meta);\nDefault.parameters = {\n  ...Default.parameters,\n  docs: {\n    ...Default.parameters?.docs,\n    source: {\n      originalSource: \"{}\",\n      ...Default.parameters?.docs?.source\n    }\n  }\n};\nDesignTokens.parameters = {\n  ...DesignTokens.parameters,\n  docs: {\n    ...DesignTokens.parameters?.docs,\n    source: {\n      originalSource: \"designTokenStory(meta)\",\n      ...DesignTokens.parameters?.docs?.source\n    }\n  }\n};"],"names":["readme","meta","Separator","tokens","tokensDefinition","jsxs","Fragment","jsx","Description","Primary","ArgsTable","PRIMARY_STORY","Stories","Default","DesignTokens","designTokenStory","_a","_c","_b"],"mappings":"w6BAAA,MAAeA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8ZCQTC,EAAQ,CACZ,MAAO,4BACP,GAAI,kBACJ,UAAWC,EACX,WAAY,CACV,aAAc,oBACd,OAAAC,EACA,iBAAAC,EACA,KAAM,CACJ,KAAM,IACFC,EAAAC,EAAA,CAAA,SAAA,CAACC,EAAAC,EAAA,CAAY,SAAUR,CAAQ,CAAA,IAC9BS,EAAQ,EAAA,EACTF,EAACG,EAAU,CAAA,MAAOC,CAAe,CAAA,IAChCC,EAAQ,EAAA,CAAA,EACX,CACJ,CACF,CACF,EAGaC,EAAiB,CAAC,EAClBC,EAAeC,EAAiBd,CAAI,YACjDY,EAAQ,WAAa,CACnB,GAAGA,EAAQ,WACX,KAAM,CACJ,IAAGG,EAAAH,EAAQ,aAAR,YAAAG,EAAoB,KACvB,OAAQ,CACN,eAAgB,KAChB,IAAGC,GAAAC,EAAAL,EAAQ,aAAR,YAAAK,EAAoB,OAApB,YAAAD,EAA0B,MAC/B,CACF,CACF,YACAH,EAAa,WAAa,CACxB,GAAGA,EAAa,WAChB,KAAM,CACJ,IAAGE,EAAAF,EAAa,aAAb,YAAAE,EAAyB,KAC5B,OAAQ,CACN,eAAgB,yBAChB,IAAGC,GAAAC,EAAAJ,EAAa,aAAb,YAAAI,EAAyB,OAAzB,YAAAD,EAA+B,MACpC,CACF,CACF"}