import{j as v}from"./jsx-runtime-670450c2.js";import{$ as R,t as w,s as B}from"./index-4ba24e52.js";import{t as q,d as A}from"./util-10016f4d.js";import"./index-f1f749bf.js";import"./_commonjsHelpers-042e6b4d.js";import"./clsx.m-ace26a20.js";import"./extends-98964cd2.js";import"./index-4d501b15.js";const D=`<!-- @license CC0-1.0 -->

# Radio button

## Terminologie

- **radio button**: "Radio button" heeft [een Wikipedia-lemma](https://en.wikipedia.org/wiki/Radio_button), [WAI-ARIA Authoring Practices 1.2](https://www.w3.org/TR/wai-aria-practices-1.2/#radiobutton) noemt het ook "radio button" en "radio group".
- **checked**: [WAI-ARIA Authoring Practices 1.2](https://www.w3.org/TR/wai-aria-practices-1.2/#radiobutton) en HTML noemen de staat van de radio button "checked", CSS heeft de \`:checked\` pseudo-class.

## Class names

- \`.utrecht-radio-button\`

## Design tokens

Nog geen design tokens.
`,C={"radio-button":{}},F={utrecht:C},H={title:"React Component/Radio Button",id:"react-radio-button",component:R,subcomponents:{FormLabel:w,FormField:B},tags:["autodocs"],parameters:{tokensPrefix:"utrecht-radio-button",tokens:q,tokensDefinition:F,docs:{description:{component:D}}},argTypes:{checked:{name:"checked",type:{name:"boolean",required:!1},table:{defaultValue:{summary:!1},category:"HTML attribute"}},disabled:{name:"disabled",type:{name:"boolean",required:!1},table:{defaultValue:{summary:!1},category:"HTML attribute"}},invalid:{name:"invalid",type:{name:"boolean",required:!1},table:{defaultValue:{summary:!1}}},required:{name:"required",type:{name:"boolean",required:!1},table:{defaultValue:{summary:!1},category:"HTML attribute"}},value:{name:"value",type:{name:"string",required:!1},table:{category:"HTML attribute"}}}},e=T=>v(R,{...T}),d=e.bind({}),r=e.bind({});r.parameters={pseudo:{hover:!0}};const a=e.bind({});a.parameters={pseudo:{focus:!0}};const t=e.bind({});t.parameters={pseudo:{focusVisible:!0}};const o=e.bind({});o.args={checked:!0,value:"checked"};const s=e.bind({});s.args={checked:!0,disabled:!0};const n=e.bind({});n.args={disabled:!0};const i=e.bind({});i.args={invalid:!0};const u=e.bind({});u.args={required:!0};const c=A(H);var m;d.parameters={...d.parameters,storySource:{source:"args => <RadioButton {...args} />",...(m=d.parameters)==null?void 0:m.storySource}};var p;r.parameters={...r.parameters,storySource:{source:"args => <RadioButton {...args} />",...(p=r.parameters)==null?void 0:p.storySource}};var l;a.parameters={...a.parameters,storySource:{source:"args => <RadioButton {...args} />",...(l=a.parameters)==null?void 0:l.storySource}};var b;t.parameters={...t.parameters,storySource:{source:"args => <RadioButton {...args} />",...(b=t.parameters)==null?void 0:b.storySource}};var g;o.parameters={...o.parameters,storySource:{source:"args => <RadioButton {...args} />",...(g=o.parameters)==null?void 0:g.storySource}};var y;s.parameters={...s.parameters,storySource:{source:"args => <RadioButton {...args} />",...(y=s.parameters)==null?void 0:y.storySource}};var f;n.parameters={...n.parameters,storySource:{source:"args => <RadioButton {...args} />",...(f=n.parameters)==null?void 0:f.storySource}};var h;i.parameters={...i.parameters,storySource:{source:"args => <RadioButton {...args} />",...(h=i.parameters)==null?void 0:h.storySource}};var k;u.parameters={...u.parameters,storySource:{source:"args => <RadioButton {...args} />",...(k=u.parameters)==null?void 0:k.storySource}};var S;c.parameters={...c.parameters,storySource:{source:"designTokenStory(meta)",...(S=c.parameters)==null?void 0:S.storySource}};const j=["Default","Hover","Focus","FocusVisible","Checked","CheckedAndDisabled","Disabled","Invalid","Required","DesignTokens"];export{o as Checked,s as CheckedAndDisabled,d as Default,c as DesignTokens,n as Disabled,a as Focus,t as FocusVisible,r as Hover,i as Invalid,u as Required,j as __namedExportsOrder,H as default};
//# sourceMappingURL=RadioButton.stories-57977a79.js.map
