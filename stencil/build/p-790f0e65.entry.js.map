{"version":3,"names":["textareaCss","HTML_DEFAULT_COLS","HTML_DEFAULT_ROWS","Textarea","render","autocomplete","cols","disabled","invalid","placeholder","readOnly","required","rows","spellcheck","value","this","h","autoComplete","class","clsx","dir","readonly","onBlur","evt","utrechtBlur","emit","onChange","utrechtChange","onFocus","utrechtFocus","onInput","target","utrechtInput"],"sources":["src/components/textarea.scss?tag=utrecht-textarea&encapsulation=shadow","src/components/textarea.tsx"],"sourcesContent":["/**\n * @license EUPL-1.2\n * Copyright (c) 2021 Robbert Broersma\n */\n\n@import \"~@utrecht/components/textarea/css\";\n\n:host {\n  display: block;\n}\n\n:host([hidden]) {\n  display: none !important;\n}\n","/**\n * @license EUPL-1.2\n * Copyright (c) 2021 Robbert Broersma\n */\n\nimport { Component, Event, EventEmitter, h, Prop } from '@stencil/core';\nimport clsx from 'clsx';\n\n/**\n * I would prefer to set `rows` and `cols` only when the properties are actually set,\n * and explicitly configure them when they are set.\n *\n * Currently Stencil offers no way to detect of the property value is the default value.\n * `this.hasOwnProperty('cols')` does not work, for example.\n *\n * As a workaround, there is a check if `cols` and `rows` are equal to the\n * `<textarea>` defaults of `2` and `20`.\n */\nconst HTML_DEFAULT_COLS = 20;\nconst HTML_DEFAULT_ROWS = 2;\n\n@Component({\n  tag: 'utrecht-textarea',\n  styleUrl: 'textarea.scss',\n  shadow: true,\n})\nexport class Textarea {\n  @Prop() autocomplete: string = '';\n  @Prop() cols: number = HTML_DEFAULT_COLS;\n  @Prop() spellcheck: boolean = false;\n  @Prop({ reflect: true }) disabled: boolean = false;\n  @Prop({ reflect: true }) invalid: boolean = false;\n  @Prop() placeholder: string = '';\n  @Prop({ attribute: 'readonly', reflect: true }) readOnly: boolean = false;\n  @Prop({ reflect: true }) required: boolean = false;\n  @Prop() rows: number = HTML_DEFAULT_ROWS;\n  @Prop() value: string = '';\n  @Event() utrechtBlur: EventEmitter;\n  @Event() utrechtChange: EventEmitter;\n  @Event() utrechtFocus: EventEmitter;\n  @Event() utrechtInput: EventEmitter;\n\n  render() {\n    const { autocomplete, cols, disabled, invalid, placeholder, readOnly, required, rows, spellcheck, value } = this;\n\n    return (\n      <textarea\n        autoComplete={autocomplete || null}\n        class={clsx(\n          'utrecht-textarea',\n          'utrecht-textarea--html-textarea',\n          disabled && 'utrecht-textarea--disabled',\n          invalid && 'utrecht-textarea--invalid',\n          readOnly && 'utrecht-textarea--readonly',\n        )}\n        cols={cols !== HTML_DEFAULT_COLS ? cols : null}\n        disabled={disabled}\n        dir=\"auto\"\n        placeholder={placeholder || null}\n        readonly={readOnly}\n        required={required}\n        spellcheck={spellcheck || null}\n        rows={rows !== HTML_DEFAULT_ROWS ? rows : null}\n        value={value}\n        onBlur={(evt) => this.utrechtBlur.emit(evt)}\n        onChange={(evt) => this.utrechtChange.emit(evt)}\n        onFocus={(evt) => this.utrechtFocus.emit(evt)}\n        onInput={(evt) => {\n          this.value = (evt.target as HTMLTextAreaElement).value;\n          this.utrechtInput.emit(evt);\n        }}\n      >\n        <slot />\n      </textarea>\n    );\n  }\n}\n"],"mappings":"iFAAA,MAAMA,EAAc,k6RCkBpB,MAAMC,EAAoB,GAC1B,MAAMC,EAAoB,E,MAObC,EAAQ,M,uNACY,G,UACRF,E,gBACO,M,cACe,M,aACD,M,iBACd,G,cACsC,M,cACvB,M,UACtBC,E,WACC,E,CAMxB,MAAAE,GACE,MAAMC,aAAEA,EAAYC,KAAEA,EAAIC,SAAEA,EAAQC,QAAEA,EAAOC,YAAEA,EAAWC,SAAEA,EAAQC,SAAEA,EAAQC,KAAEA,EAAIC,WAAEA,EAAUC,MAAEA,GAAUC,KAE5G,OACEC,EAAA,YACEC,aAAcZ,GAAgB,KAC9Ba,MAAOC,EACL,mBACA,kCACAZ,GAAY,6BACZC,GAAW,4BACXE,GAAY,8BAEdJ,KAAMA,IAASL,EAAoBK,EAAO,KAC1CC,SAAUA,EACVa,IAAI,OACJX,YAAaA,GAAe,KAC5BY,SAAUX,EACVC,SAAUA,EACVE,WAAYA,GAAc,KAC1BD,KAAMA,IAASV,EAAoBU,EAAO,KAC1CE,MAAOA,EACPQ,OAASC,GAAQR,KAAKS,YAAYC,KAAKF,GACvCG,SAAWH,GAAQR,KAAKY,cAAcF,KAAKF,GAC3CK,QAAUL,GAAQR,KAAKc,aAAaJ,KAAKF,GACzCO,QAAUP,IACRR,KAAKD,MAASS,EAAIQ,OAA+BjB,MACjDC,KAAKiB,aAAaP,KAAKF,EAAI,GAG7BP,EAAA,a"}