/*! For license information please see Icon-stories.65da7f3f.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunk_utrecht_storybook_web_component=self.webpackChunk_utrecht_storybook_web_component||[]).push([[3674],{"./src/Icon.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ButtonIcon:()=>ButtonIcon,Default:()=>Default,DesignTokens:()=>DesignTokens,InlineSVG:()=>InlineSVG,LinkIcon:()=>LinkIcon,Oversized:()=>Oversized,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Icon_stories});var tokens=__webpack_require__("../../components/icon/tokens.json"),dist=__webpack_require__("../../proprietary/design-tokens/dist/index.json"),icon_dist=__webpack_require__("../../components/icon/dist/index.json"),design_token_story=(__webpack_require__("../../node_modules/.pnpm/react@18.2.0/node_modules/react/index.js"),__webpack_require__("./src/design-token-story.tsx")),jsx_runtime=__webpack_require__("../../node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.js");const meta={title:"Web Component/Icon",id:"web-component-icon",component:({color,icon,size})=>{const IconElement=icon;return color||size?(0,jsx_runtime.jsx)("div",{style:{"--utrecht-icon-color":color&&color,"--utrecht-icon-size":size&&`${size}px`},children:(0,jsx_runtime.jsx)(IconElement,{})}):(0,jsx_runtime.jsx)(IconElement,{})},argTypes:{children:{description:"Content of the icon, for example: an <svg> element"},color:{description:"Color of the icon",control:"color"},size:{description:"Size of the icon (in pixels)",control:"number"},icon:{description:"Icon",control:{type:"select"},options:["",...icon_dist.map((({id})=>id))]}},args:{children:[],color:"#888888",icon:"utrecht-icon-loupe",size:32},tags:["autodocs"],parameters:{status:{type:"WORK IN PROGRESS"},tokensPrefix:"utrecht-icon",tokens:dist,tokensDefinition:tokens,docs:{description:{component:"\x3c!-- @license CC0-1.0 --\x3e\n\n# Iconen in code\n\n## Iconen gebruiken als Custom Element\n\nEÃ©n van de makkelijkste manieren om iconen te gebruiken is door ze te includen in de web component library, zodat je ze als custom element kan gebruiken. Elk icoon is beschikbaar als custom element. De naam van van het icoon (`utrecht-icon-...`) is ook de naam van het custom-element. Voorbeeld:\n\n```html\n<div>\n  <utrecht-icon-loupe></utrecht-icon-loupe>\n</div>\n```\n\nVerander de kleur van het icoon via de CSS-eigenschap `color` op een parent element of via de custom eigenschap `--utrecht-icon-color`.\n\n### `color` van de omgevings content\n\nOp onderstaande manier kan je het makkelijkst de kleur aanpassen. De kleur van de bestaande tekst zal ook op het icoon toegepast worden.\n\n```html\n<button>\n  <utrecht-icon-loupe></utrecht-icon-loupe>\n  Search\n</button>\n\n<style>\n  button {\n    background-color: rgb(0, 0, 0);\n    color: rgb(255, 255, 255);\n  }\n</style>\n```\n\n### `--utrecht-icon-color` als custom icoon kleur\n\nDeze manier is handig als je een klein verschil wilt aanbrengen tussen de tekst kleur en de kleur van het icoon. Het gebruikt een CSS custom property `--utrecht-icon-color` als de kleur van het icoon.\n\n```html\n<button>\n  <utrecht-icon-loupe></utrecht-icon-loupe>\n  Search\n</button>\n\n<style>\n  button {\n    --utrecht-icon-color: rgba(255, 255, 255, 0.75);\n    background-color: rgb(0, 0, 0);\n    color: rgb(255, 255, 255);\n  }\n</style>\n```\n\n### Icoon grootte aanpassen\n\nDe grootte van het icoon kan aangepast worden met de `--utrecht-icon-size` CSS eigenschap:\n\n```html\n<button>\n  <utrecht-icon-loupe></utrecht-icon-loupe>\n  Search\n</button>\n\n<style>\n  button {\n    --utrecht-icon-size: 42px;\n    background-color: rgb(0, 0, 0);\n    color: rgb(255, 255, 255);\n  }\n</style>\n```\n\n## Overzicht van icons\n\nWanneer het nodig is een overzicht te hebben van de beschikbare icons, gebruik dan als basis de meegeleverde JSON informatie in `dist/index.json`. Het bevat een array met onder andere de ID van elke icoon. Op dit moment is de naam van de custom element altijd gelijk aan de ID.\n"}}}},Icon_stories=meta,Default={},InlineSVG={args:{children:(0,jsx_runtime.jsx)("svg",{viewBox:"0 0 32 32",children:(0,jsx_runtime.jsx)("rect",{fill:"currentColor",x:"0",y:"0",width:"32",height:"32"})})},name:"with inline SVG"},Oversized={args:{children:(0,jsx_runtime.jsx)("svg",{viewBox:"0 0 32 32",width:"128px",height:"128px",children:(0,jsx_runtime.jsx)("rect",{fill:"currentColor",x:"0",y:"0",width:"32",height:"32"})})},name:"Icon with inline SVG with oversized dimensions"},ButtonIcon={args:{children:(0,jsx_runtime.jsx)("svg",{viewBox:"0 0 32 32",children:(0,jsx_runtime.jsx)("rect",{fill:"currentColor",x:"0",y:"0",width:"32",height:"32"})})},decorators:[Story=>(0,jsx_runtime.jsxs)("button",{className:"utrecht-button utrecht-button--html-button utrecht-button--primary-action",children:[Story()," Click me"]})],name:"Icon with inline SVG inside a button"},LinkIcon={args:{children:(0,jsx_runtime.jsx)("svg",{viewBox:"0 0 32 32",children:(0,jsx_runtime.jsx)("rect",{fill:"currentColor",x:"0",y:"0",width:"32",height:"32"})})},decorators:[Story=>(0,jsx_runtime.jsx)("p",{className:"utrecht-paragraph",children:(0,jsx_runtime.jsxs)("a",{className:"utrecht-link utrecht-link--html-a",href:"https://example.com/",children:[Story(),"Link"]})})],name:"Icon with inline SVG inside a link"},DesignTokens=(0,design_token_story.$)(meta);Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{}",...Default.parameters?.docs?.source}}},InlineSVG.parameters={...InlineSVG.parameters,docs:{...InlineSVG.parameters?.docs,source:{originalSource:'{\n  args: {\n    children: <svg viewBox="0 0 32 32">\n        <rect fill="currentColor" x="0" y="0" width="32" height="32" />\n      </svg>\n  },\n  name: \'with inline SVG\'\n}',...InlineSVG.parameters?.docs?.source}}},Oversized.parameters={...Oversized.parameters,docs:{...Oversized.parameters?.docs,source:{originalSource:'{\n  args: {\n    children: <svg viewBox="0 0 32 32" width="128px" height="128px">\n        <rect fill="currentColor" x="0" y="0" width="32" height="32" />\n      </svg>\n  },\n  name: \'Icon with inline SVG with oversized dimensions\'\n}',...Oversized.parameters?.docs?.source}}},ButtonIcon.parameters={...ButtonIcon.parameters,docs:{...ButtonIcon.parameters?.docs,source:{originalSource:'{\n  args: {\n    children: <svg viewBox="0 0 32 32">\n        <rect fill="currentColor" x="0" y="0" width="32" height="32" />\n      </svg>\n  },\n  decorators: [Story => <button className="utrecht-button utrecht-button--html-button utrecht-button--primary-action">\n        {Story()} Click me\n      </button>],\n  name: \'Icon with inline SVG inside a button\'\n}',...ButtonIcon.parameters?.docs?.source}}},LinkIcon.parameters={...LinkIcon.parameters,docs:{...LinkIcon.parameters?.docs,source:{originalSource:'{\n  args: {\n    children: <svg viewBox="0 0 32 32">\n        <rect fill="currentColor" x="0" y="0" width="32" height="32" />\n      </svg>\n  },\n  decorators: [Story => <p className="utrecht-paragraph">\n        <a className="utrecht-link utrecht-link--html-a" href="https://example.com/">\n          {Story()}Link\n        </a>\n      </p>],\n  name: \'Icon with inline SVG inside a link\'\n}',...LinkIcon.parameters?.docs?.source}}},DesignTokens.parameters={...DesignTokens.parameters,docs:{...DesignTokens.parameters?.docs,source:{originalSource:"designTokenStory(meta)",...DesignTokens.parameters?.docs?.source}}};const __namedExportsOrder=["Default","InlineSVG","Oversized","ButtonIcon","LinkIcon","DesignTokens"]}}]);